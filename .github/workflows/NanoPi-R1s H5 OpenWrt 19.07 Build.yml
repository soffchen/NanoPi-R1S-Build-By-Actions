on:
  push:
    paths:
      - 'Version'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialize Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          docker image prune -a -f
          sudo apt-get -y install upx-ucl
          sudo apt-get -y purge dotnet* ghc* google* llvm* mysql* php* zulu* firefox hhvm powershell
          sudo apt-get -y autoremove --purge          
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Download Source
        run: |
          rm -rf friendlywrt-h5
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
      
      - name: Merge UpStearm OpenWrt
        run: |
          cd friendlywrt-h5
          cd .repo/manifests
          rm -f ./h5.xml
          wget https://raw.githubusercontent.com/soffchen/NanoPi-R1S-Build-By-Actions/master/source_xml/h5_19.07.xml
          cp h5_19.07.xml h5.xml
          rm -rf ./h5_19.07.xml
          repo sync -c  --no-clone-bundle
      
      - name: Merge LEDE
        run: |
          cd friendlywrt-h5
          git clone https://github.com/coolsnowwolf/lede
          cd friendlywrt
          cp -r ../lede/package/lean package/
          sed -i 's/^src-git luci.*/src-git luci https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
          sed -i 's/^src-git packages.*/src-git packages https:\/\/github.com\/coolsnowwolf\/packages/' feeds.conf.default
      
      - name: Luci for Clash
        run: |
          cd friendlywrt-h5/friendlywrt/package
          git clone https://github.com/frainzy1477/luci-app-clash

      - name: Install Clash Binaries
        run: |
          mkdir -p friendlywrt-h5/friendlywrt/package/base-files/files/etc/clash
          cd friendlywrt-h5/friendlywrt/package/base-files/files/etc/clash
          wget https://github.com/frainzy1477/clash_dev/releases/download/v0.17.2/clash-linux-armv8-v0.17.2.gz
          gunzip clash-linux-armv8-v0.17.2.gz
          chmod +x clash-linux-armv8-v0.17.2
          mv clash-linux-armv8-v0.17.2 clash

      - name: Set Clash Version
        run: |
          mkdir -p friendlywrt-h5/friendlywrt/package/base-files/files/usr/share/clash
          cd friendlywrt-h5/friendlywrt/package/base-files/files/usr/share/clash
          echo 0.17.2 > core_version

      - name: Update Target.mk
        run: |
          cd friendlywrt-h5/friendlywrt/include 
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci/' target.mk    
          
      - name: Update Feeds
        run: |
          cd friendlywrt-h5/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Custom Configure Files
        run: |
          cd friendlywrt-h5/friendlywrt
          rm -f ./.config*
          wget https://raw.githubusercontent.com/soffchen/NanoPi-R1S-Build-By-Actions/master/r1s-h5-config
          cp r1s-h5-config .config

      - name: Download Packages
        if: always()
        run: |
          cd friendlywrt-h5/friendlywrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Install UPX
        run: |
          ln -s /usr/bin/upx-ucl friendlywrt-rk3328/friendlywrt/staging_dir/host/bin/upx

      - name: Build OpenWrt
        run: |
          cd friendlywrt-h5
          ./build.sh nanopi_r1s.mk
      
      - name: Zip Files
        run: |
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img*" | xargs -i zip -r {}.zip {}
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R1S H5 v19.07
          path: ./artifact/
